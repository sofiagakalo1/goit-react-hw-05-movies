{"version":3,"file":"static/js/492.4622a6e9.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/OneMovieDetails/OneMovieDetails.module.css?c5c0","components/OneMovieDetails/OneMovieDetails.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx","utils/API/movies-api.js"],"sourcesContent":["import { Vortex } from 'react-loader-spinner';\nconst Loader = () => {\n  return (\n    <Vortex\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"vortex-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"vortex-wrapper\"\n      colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"OneMovieDetails_item__dqk7h\",\"imgBlock\":\"OneMovieDetails_imgBlock__m2stj\",\"img\":\"OneMovieDetails_img__wm6lH\",\"infoBlock\":\"OneMovieDetails_infoBlock__zJD7S\"};","import { Link, Outlet } from 'react-router-dom';\nimport css from './OneMovieDetails.module.css';\n\nconst OneMovieDetails = ({ movieDetails }) => {\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    movieDetails;\n\n  const movieGenres = genres\n    ?.map(genre => {\n      return genre.name;\n    })\n    .join(', ');\n  // console.log(genres)\n  const date = release_date?.slice(0, 4);\n  // console.log(release_date)\n  const votes = (vote_average * 10).toFixed(0);\n\n  return (\n    <>\n      {/* <h1>OneMovieDetails</h1> */}\n      <div className={css.item}>\n        <div className={css.imgBlock}>\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n            alt={title}\n            className={css.img}\n          />\n        </div>\n        <div className={css.infoBlock}>\n          <h1 className={css.h1}>\n            {title} ({date})\n          </h1>\n          <p className={css.score}>User score: {votes}%</p>\n          <h2 className={css.h2}>Overwiev</h2>\n          <p className={css.overview}>{overview}</p>\n          <h3 className={css.h3}>Genres</h3>\n          <p className={css.genres}>{movieGenres}</p>\n          <div>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Rewiews</Link>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default OneMovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetailsPage_button__mSHH6\"};","import { useState, useEffect } from 'react';\nimport { getMovieDetailsById } from '../../utils/API/movies-api';\nimport OneMovieDetails from '../../components/OneMovieDetails/OneMovieDetails';\nimport Loader from '../../components/Loader/Loader';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport css from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    if (movieId) {\n      const fetchMovieDetails = async () => {\n        try {\n          setLoading(true);\n          const response = await getMovieDetailsById(movieId);\n          // console.log(response); //response and data are objects // results is array of objects// response-data-results\n          const { data } = response;\n          setMovieDetails(data);\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchMovieDetails();\n    }\n  }, [movieId]);\n  // console.log(movieDetails);\n  return (\n    <>\n      {/* <h1>MovieDetails</h1> */}\n      {error && <h1>error...</h1>}\n      {loading && <Loader />}\n      <button\n        className={css.button}\n        onClick={() => navigate(from)}\n        type=\"button\"\n      >\n        Go back\n      </button>\n      <OneMovieDetails movieDetails={movieDetails} state={{ from }} />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';  \n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params:{\n        api_key: '8b3b87955e63e3e9950b3cf9b384a483',\n    }\n})\n\nexport async function getTrendingMovies(){\n    const query = '/trending/movie/day?';\n        const response  = await instance.get(query);\n        return response;\n    }\n\n    export async function getMovieDetailsById(movieId){\n        const query = `/movie/${movieId}?`;\n        const response = await instance.get(query);\n        return response;\n    }\n\n    export async function getMoviesBySearch(search){\n        const query = `/search/movie?query=${search}`;\n        const response = await instance.get(query);\n        return response;\n    }\n\n    export async function getMovieCast(movieId){\n        const query = `/movie/${movieId}/credits?`;\n        const response = await instance.get(query);\n        return response;\n    }\n\n    export async function getMovieReviews(movieId){\n        const query = `/movie/${movieId}/reviews?`;\n        const response = await instance.get(query);\n        return response;\n    }"],"names":["visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","movieDetails","title","poster_path","release_date","vote_average","overview","genres","movieGenres","map","genre","name","join","date","slice","votes","toFixed","className","css","src","alt","to","useState","setMovieDetails","loading","setLoading","error","setError","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovieDetails","getMovieDetailsById","response","data","message","Loader","onClick","type","instance","axios","baseURL","params","api_key","getTrendingMovies","get","query","getMoviesBySearch","search","getMovieCast","getMovieReviews"],"sourceRoot":""}