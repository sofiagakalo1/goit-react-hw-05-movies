{"version":3,"file":"static/js/748.ee00c96a.chunk.js","mappings":"4JAeA,IAde,WACb,OACE,SAAC,KAAD,CACEA,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,WAG1D,C,kHCuCD,UA9CgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,sGAEjBN,GAAW,GAFM,UAGMO,EAAAA,EAAAA,IAAgBJ,GAHtB,OAGXK,EAHW,OAITC,EAAYD,EAASE,KAArBD,QACRX,EAAWW,GALM,gDAOjBP,EAAS,KAAMS,UAPE,yBASjBX,GAAW,GATM,4EAAH,qDAYlBM,GACD,GAAE,CAACH,IAEJ,IAAMS,EAAWf,EAAQgB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1C,OACE,2BACE,oCAAYD,MACX,oCAAYC,OAFNF,EAKZ,IAED,OACE,gCAEGb,IAAS,oDACTF,IAAW,SAAC,IAAD,IACXkB,QAAQpB,EAAQqB,SACf,wBAAKN,IADN,0CAON,C,sLChDKO,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAO,CACHC,QAAS,sCAIV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,0FACW,uBADX,SAEyBL,EAASM,IADvB,wBADX,cAEOjB,EAFP,yBAGQA,GAHR,kEAMI,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAAmCvB,GAAnC,gFACGwB,EADH,iBACqBxB,EADrB,cAEoBgB,EAASM,IAAIE,GAFjC,cAEGnB,EAFH,yBAGIA,GAHJ,kEAMA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gFACGF,EADH,8BACkCE,GADlC,SAEoBV,EAASM,IAAIE,GAFjC,cAEGnB,EAFH,yBAGIA,GAHJ,kEAMA,SAAesB,EAAtB,+CAAO,OAAP,oBAAO,WAA4B3B,GAA5B,gFACGwB,EADH,iBACqBxB,EADrB,sBAEoBgB,EAASM,IAAIE,GAFjC,cAEGnB,EAFH,yBAGIA,GAHJ,kEAMA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAA+BJ,GAA/B,gFACGwB,EADH,iBACqBxB,EADrB,sBAEoBgB,EAASM,IAAIE,GAFjC,cAEGnB,EAFH,yBAGIA,GAHJ,kE","sources":["components/Loader/Loader.jsx","pages/ReviewsPage/ReviewsPage.jsx","utils/API/movies-api.js"],"sourcesContent":["import { Vortex } from 'react-loader-spinner';\nconst Loader = () => {\n  return (\n    <Vortex\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"vortex-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"vortex-wrapper\"\n      colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n    />\n  );\n};\n\nexport default Loader;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from '../../utils/API/movies-api';\nimport Loader from '../../components/Loader/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setLoading(true);\n        const response = await getMovieReviews(movieId);\n        const { results } = response.data;\n        setReviews(results);\n      } catch (error) {\n        setError(error.messsage);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  const elements = reviews.map(({ id, author, content }) => {\n    return (\n      <li key={id}>\n        <p>Author: {author}</p>\n        {<p>Review: {content}</p>}\n      </li>\n    );\n  });\n\n  return (\n    <>\n      {/* <h1>Reviews</h1> */}\n      {error && <h1>Something went wrong...</h1>}\n      {loading && <Loader />}\n      {Boolean(reviews.length) ? (\n        <ul>{elements}</ul>\n      ) : (\n        `There are no reviews of this movie :(`\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';  \n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params:{\n        api_key: '8b3b87955e63e3e9950b3cf9b384a483',\n    }\n})\n\nexport async function getTrendingMovies(){\n    const query = '/trending/movie/day?';\n        const response  = await instance.get(query);\n        return response;\n    }\n\n    export async function getMovieDetailsById(movieId){\n        const query = `/movie/${movieId}?`;\n        const response = await instance.get(query);\n        return response;\n    }\n\n    export async function getMoviesBySearch(search){\n        const query = `/search/movie?query=${search}`;\n        const response = await instance.get(query);\n        return response;\n    }\n\n    export async function getMovieCast(movieId){\n        const query = `/movie/${movieId}/credits?`;\n        const response = await instance.get(query);\n        return response;\n    }\n\n    export async function getMovieReviews(movieId){\n        const query = `/movie/${movieId}/reviews?`;\n        const response = await instance.get(query);\n        return response;\n    }"],"names":["visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useState","reviews","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchReviews","getMovieReviews","response","results","data","messsage","elements","map","id","author","content","Boolean","length","instance","axios","baseURL","params","api_key","getTrendingMovies","get","getMovieDetailsById","query","getMoviesBySearch","search","getMovieCast"],"sourceRoot":""}