{"version":3,"file":"static/js/583.939ccf4f.chunk.js","mappings":"4JAeA,IAde,WACb,OACE,SAAC,KAAD,CACEA,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,WAG1D,C,kHCwCD,UA/Ca,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdR,GAAW,GAFG,UAGSS,EAAAA,EAAAA,IAAaN,GAHtB,OAGRO,EAHQ,OAIdL,QAAQC,IAAII,GACJb,EAASa,EAASC,KAAlBd,KACRC,EAAQD,GANM,kDAQdK,EAAS,KAAMU,SARD,yBAUdZ,GAAW,GAVG,6EAAH,qDAafQ,GACD,GAAE,CAACL,IAEJ,IAAMU,EAAWhB,EAAKiB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,KAAsB,EAAhBC,UACrC,OACE,yBACE,uBAAID,KADGD,EAIZ,IAED,OACE,gCAEGd,IAAS,oDACTF,IAAW,SAAC,IAAD,IACXmB,QAAQrB,EAAKsB,SACZ,wBAAKN,IADN,0CAON,C,sLCjDKO,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAO,CACHC,QAAS,sCAIV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,0FACW,uBADX,SAEyBL,EAASM,IADvB,wBADX,cAEOhB,EAFP,yBAGQA,GAHR,kEAMI,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAAmCxB,GAAnC,gFACGyB,EADH,iBACqBzB,EADrB,cAEoBiB,EAASM,IAAIE,GAFjC,cAEGlB,EAFH,yBAGIA,GAHJ,kEAMA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gFACGF,EADH,8BACkCE,GADlC,SAEoBV,EAASM,IAAIE,GAFjC,cAEGlB,EAFH,yBAGIA,GAHJ,kEAMA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAA4BN,GAA5B,gFACGyB,EADH,iBACqBzB,EADrB,sBAEoBiB,EAASM,IAAIE,GAFjC,cAEGlB,EAFH,yBAGIA,GAHJ,kEAMA,SAAeqB,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5B,GAA/B,gFACGyB,EADH,iBACqBzB,EADrB,sBAEoBiB,EAASM,IAAIE,GAFjC,cAEGlB,EAFH,yBAGIA,GAHJ,kE","sources":["components/Loader/Loader.jsx","pages/CastPage/CastPage.jsx","utils/API/movies-api.js"],"sourcesContent":["import { Vortex } from 'react-loader-spinner';\nconst Loader = () => {\n  return (\n    <Vortex\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"vortex-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"vortex-wrapper\"\n      colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n    />\n  );\n};\n\nexport default Loader;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCast } from '../../utils/API/movies-api';\nimport Loader from '../../components/Loader/Loader';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  console.log(movieId);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const response = await getMovieCast(movieId);\n        console.log(response);\n        const { cast } = response.data;\n        setCast(cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  const elements = cast.map(({ id, name, character }) => {\n    return (\n      <li key={id}>\n        <p>{name}</p>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      {/* <h1>Cast</h1> */}\n      {error && <h1>Something went wrong...</h1>}\n      {loading && <Loader />}\n      {Boolean(cast.length) ? (\n        <ol>{elements}</ol>\n      ) : (\n        `There is no information about cast :(`\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';  \n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params:{\n        api_key: '8b3b87955e63e3e9950b3cf9b384a483',\n    }\n})\n\nexport async function getTrendingMovies(){\n    const query = '/trending/movie/day?';\n        const response  = await instance.get(query);\n        return response;\n    }\n\n    export async function getMovieDetailsById(movieId){\n        const query = `/movie/${movieId}?`;\n        const response = await instance.get(query);\n        return response;\n    }\n\n    export async function getMoviesBySearch(search){\n        const query = `/search/movie?query=${search}`;\n        const response = await instance.get(query);\n        return response;\n    }\n\n    export async function getMovieCast(movieId){\n        const query = `/movie/${movieId}/credits?`;\n        const response = await instance.get(query);\n        return response;\n    }\n\n    export async function getMovieReviews(movieId){\n        const query = `/movie/${movieId}/reviews?`;\n        const response = await instance.get(query);\n        return response;\n    }"],"names":["visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useState","cast","setCast","loading","setLoading","error","setError","movieId","useParams","console","log","useEffect","fetchCast","getMovieCast","response","data","message","elements","map","id","name","character","Boolean","length","instance","axios","baseURL","params","api_key","getTrendingMovies","get","getMovieDetailsById","query","getMoviesBySearch","search","getMovieReviews"],"sourceRoot":""}